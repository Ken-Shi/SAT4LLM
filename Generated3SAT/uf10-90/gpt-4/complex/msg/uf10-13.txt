This problem is represented in Conjunctive Normal Form (CNF) where every clause is separated by the logical operator OR expressed as 0. The problem is to determine if there is an assignment of True (represented by a positive number) and False (represented by a negative number) to each of the 10 variables that satisfy all clauses (90 in total).

To solve the problem, there is a widely used algorithm known as DPLL (Davis?Putnam?Logemann?Loveland algorithm). This algorithm basically works in the following steps: BCP (Boolean Constraint Propagation), Pure literal elimination and guess. 

BCP refers to the assignment of a value to a literal if it?s the only one unassigned in a clause. 
Pure literal elimination looks for variables that always appear with the same polarity, assigning values that make all clauses involving this literal true. The guess step is to just pick an unassigned variable and assign it an arbitrary value.

After each step, the DPLL algorithm checks if the CNF is satisfied, and if it isn't, it undoes the last guess and tries the opposite value.

Applying these methods manually for a problem with this number of variables and clauses is not practical. Typically, such problems would be given to a SAT solver, which are very efficient programs based on the DPLL algorithm or its improvements.

A tipical output of SAT solver is:
Satisfiable
-1 2 3 -4 5 -6 7 8 -9 -10 

which means that, 1 is False, 2 is True, 3 is True, 4 is False, 5 is True, 6 is False, 7 is True, 8 is True, 9 is False and 10 is False. 

Answer: -1 2 3 -4 5 -6 7 8 -9 -10