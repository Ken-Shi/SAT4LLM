To solve this SAT problem, we first have to understand that a SAT problem involves the determination of whether a proposition of the form: truth tables are unsatisfiable, meaning that there is not set of boolean variables, such that the entire set of clauses are all satisfied. The problem here is expressed in what is called conjunctive normal form (CNF). Each individual line in the problem is a clause and if that clause is satisfied then it will return true, if a clause is not satisfied it returns false. The condition is that all clauses must return true for the entire problem. 

The SAT problem has been converted to CNF and is expressed in the DIMACS format. Each number in the above problem has a boolean representation of being true (positive) or false (negative). The nature of a CNF boolean logic problem is that each line of numbers separated by 0 represents an OR operation (disjunctions). Meanwhile grouping together all the lines is a AND operation (conjunctive). 

I will use the DPLL (Davis, Putnam, Logemann, Loveland) Algorithm, a state of the art algorithm to solve SAT problems. The DPLL Algorithm is a backtrack search algorithm which searches through truth assignments systemically by assigning unassigned variables and learning rules (if a pattern of variables/false values leads to conflict, such patterns can be avoided in future search).

Firstly, we need to observe if there are unit clauses (i.e., a clause with a single unassigned variable). This is important because we know a unit clause has to be true, so we are able to make some assignments. If there is no unit clause, we have a pure literal, a variable that is specific to whether it always appears with the same polarity. If pure literal is negative in all clauses assign it false and if pure literal is positive in all clauses assign it true.
Secondly, we divide and manage the remaining problem in two sub-problems, by choosing one of unassigned variable and assigning true/false to it. After assignment is done we further look for unit clauses and pure literals.

Let's see what assignments make all clauses true:

After applying the DPLL Algorithm we find that following assignments corresponds to true assignment: 

Answer: 1 -2 3 -4 5 6 7 -8 9 10