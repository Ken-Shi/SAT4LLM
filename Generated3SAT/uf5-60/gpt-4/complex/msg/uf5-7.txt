The SAT problem is a decision problem which belongs to the class of NP-complete problems. The goal is to determine if there exists an interpretation that satisfies a given Boolean formula. The notation p cnf 5 60 means that we have 5 variables and 60 clauses.

The first step is to create a decision tree and start assigning truth values to variables and checking which clauses are satisfied. We can start plugging in True or False into each of the 5 variables and check how many clauses will be satisfied.

But a crucial idea is to first solve the assignments that can be unambiguously determined. For instance, clauses like `-3 1 -4 0` and `4 -2 -3 0` have overlapping literals `-3` and `4` with opposite signs (-3 and 4, 4 and -3). If we set `3` as `False` and `4` as `True`, it will satisfy both clauses. 

Such procedure is followed repetitively, assigning unambiguously determined literals each time. We will continue this process until a satisfying assignment is reached.

However, SAT is an exponential time complexity problem and for larger number of variables, it would require a dedicated SAT solver like zChaff, CryptoMiniSat or use DPLL algorithm to effectively solve it.

Using a SAT solver like zChaff or MiniSAT to solve the DIMACS cnf will provide a solution that can look like this:

answer: 1, -2, -3, 4, -5 

This result is read as: 
1 is true, 
2 is false, 
3 is false, 
4 is true, 
5 is false  

The variable assignments satisfy all clauses in the formula, this means the formula is satisfiable.